using System;
using System.Collections.Generic;
using System.Windows.Forms;

namespace Week07Homework
{
    public partial class Form1 : Form
    {
        List<Product> products; // 등록된 상품 리스트
        Product searchProduct;  // 검색된 선택 상품

        public Form1()
        {
            InitializeComponent();
            products = new List<Product>(); // 상품 리스트 초기화
        }

        // 상품 등록 버튼 클릭 시 호출
        private void btnInput_Click(object sender, EventArgs e)
        {
            // 상품명 입력 여부 확인
            if (string.IsNullOrEmpty(tbxInputProductName.Text.Trim())) {
                tbxInputProductName.Focus();
                return;
            }
            // 가격 입력 여부 확인
            if (string.IsNullOrEmpty(tbxInputProductPrice.Text)) {
                tbxInputProductPrice.Focus();
                return;
            }
            // 재고 입력 여부 확인
            if (string.IsNullOrEmpty(tbxInputProductStock.Text)) {
                tbxInputProductStock.Focus();
                return;
            }

            // 가격이 숫자인지 확인하고, 음수는 불가
            if (!int.TryParse(tbxInputProductPrice.Text, out int price)) {
                tbxInputProductPrice.Focus();
                return;
            } else {
                if (price < 0) {
                    tbxInputProductPrice.Focus();
                    return;
                }
            }

            // 재고가 숫자인지 확인하고, 음수는 불가
            if (!int.TryParse(tbxInputProductStock.Text, out int stock)) {
                tbxInputProductStock.Focus();
                return;
            } else {
                if (stock < 0) {
                    tbxInputProductStock.Focus();
                    return;
                }
            }

            // Product 객체 생성 및 초기화
            var product = new Product();
            product.Name = tbxInputProductName.Text.Trim(); // 상품명
            product.Code = CreateCode(); // 고유 코드 생성
            product.Price = price; // 가격
            product.Stock = stock; // 재고
            product.RegDate = DateTime.Now.AddDays(-(new Random()).Next(20, 100)); // 등록일

            products.Add(product); // 리스트에 추가
            MessageBox.Show("등록완료");
            ClearInput(); // 입력 폼 초기화
        }

        // 상품 코드 생성 메서드
        private string CreateCode()
        {
            Random random = new Random();
            do {
                var code = DateTime.Now.ToString("yyyyMMdd") + random.Next(1000).ToString("D3");
                bool exists = false;
                foreach (var product in products) {
                    if (product.Code == code) {
                        exists = true;
                        break;
                    }
                }
                if (!exists)
                    return code;
            } while (true);
        }

        // 입력 폼 초기화
        private void ClearInput()
        {
            tbxInputProductName.Text = string.Empty;
            tbxInputProductPrice.Text = string.Empty;
            tbxInputProductStock.Text = string.Empty;
        }

        // 검색 버튼 클릭 시 호출
        private void btnSearch_Click(object sender, EventArgs e)
        {
            lbxSearchProduct.SelectedIndex = -1;
            lbxSearchProduct.Items.Clear();
            ClearSearch();

            var searchKeyword = tbxSerarchNameCode.Text.Trim(); // 검색어

            // 이름 또는 코드에 검색어가 포함된 상품 필터링
            foreach (var product in products) {
                if (product.Name.Contains(searchKeyword) || product.Code.Contains(searchKeyword)) {
                    lbxSearchProduct.Items.Add(product); // 결과 리스트에 추가
                }
            }

            if (lbxSearchProduct.Items.Count <= 0) {
                MessageBox.Show("조회할 상품이 없습니다.");
            }
        }

        // 검색 결과 초기화
        private void ClearSearch()
        {
            searchProduct = null;
            lblSearchProductName.Text = string.Empty;
            lblSearchProductCode.Text = string.Empty;
            lblSearchProductPrice.Text = string.Empty;
            lblSearchProductSalePrice.Text = string.Empty;
            lblSearchProductStock.Text = string.Empty;
            lblSearchProductRegDate.Text = string.Empty;
            tbxSearchProductCount.Text = string.Empty;
            lblSearchProductTotalPrice.Text = string.Empty;
        }

        // 리스트에서 상품 선택 시 호출
        private void lbxSearchProduct_SelectedIndexChanged(object sender, EventArgs e)
        {
            ClearSearch();
            if (lbxSearchProduct.SelectedIndex < 0) {
                return;
            }

            if (lbxSearchProduct.SelectedItem is Product product) {
                // 선택한 상품 정보 출력
                lblSearchProductName.Text = product.Name;
                lblSearchProductCode.Text = product.Code;
                lblSearchProductPrice.Text = product.Price.ToString();
                lblSearchProductSalePrice.Text = product.SalePrice().ToString();
                lblSearchProductStock.Text = product.Stock.ToString();
                lblSearchProductRegDate.Text = product.RegDate.ToString("yyyy-MM-dd");
                tbxSearchProductCount.Text = string.Empty;
                lblSearchProductTotalPrice.Text = string.Empty;
                searchProduct = product;
            } else {
                MessageBox.Show("조회할 정보가 없습니다.");
                return;
            }
        }

        // 총 금액 계산 버튼 클릭 시 호출
        private void btnCal_Click(object sender, EventArgs e)
        {
            lblSearchProductTotalPrice.Text = string.Empty;

            if (int.TryParse(tbxSearchProductCount.Text, out int count)) {
                if (count < 1 || count > searchProduct.Stock) {
                    tbxSearchProductCount.Focus();
                    return;
                }
            } else {
                tbxSearchProductCount.Focus();
                return;
            }

            // 총 금액 계산 및 출력
            var totalPrice = searchProduct.CalPrice(count);
            lblSearchProductTotalPrice.Text = totalPrice.ToString();
        }
    }
}
